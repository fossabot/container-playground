version: 2.0

jobs:
  "color":
    docker:
      - image: circleci/node:7.10
    working_directory: ~/container-playground/containers/color/
    steps:
      - checkout:
          path: ~/container-playground

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test
      - run:
          command: |
            docker build --rm=false -t $REGISTRY_HOST/tests/color .
      - run:
          command: |
            docker login --username $DOCKER_USER --password $DOCKER_PASS $REGISTRY_HOST
      - run:
          command: |
            docker push $REGISTRY_HOST/tests/color:1.0
  "mixer":
    docker:
      - image: circleci/node:7.10
    working_directory: ~/container-playground/containers/mixer/
    steps:
      - checkout:
          path: ~/container-playground

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm test
      - run:
          command: |
            docker build --rm=false -t $REGISTRY_HOST/tests/mixer .
      - run:
          command: |
            docker login --username $DOCKER_USER --password $DOCKER_PASS $REGISTRY_HOST
      - run:
          command: |
            docker push $REGISTRY_HOST/tests/mixer:1.0

workflows:
  version: 2
  build:
    jobs:
      - "color":
          context: container-playground
      - "mixer":
          context: container-playground
