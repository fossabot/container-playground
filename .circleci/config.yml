version: 2.0

jobs:
  "color":
    docker:
      - image: circleci/node:7.10
    working_directory: ~/container-playground/containers/color/
    steps:
      - checkout:
          path: ~/container-playground

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      #linting
      - run:
          command: |
            mkdir -p ~/reports
            node_modules/.bin/eslint . --format junit --output-file ~/reports/eslint.xml
          when: always
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports

      # run tests!
      - run:
          name: Run tests with JUnit as reporter
          command: node_modules/.bin/jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"

      - setup_remote_docker
      - run:
          command: |
            docker build --rm=false -t $REGISTRY_HOST/tests/color .
      - run:
          command: |
            docker login --username $DOCKER_USER --password $DOCKER_PASS $REGISTRY_HOST
      - run:
          command: |
            docker push $REGISTRY_HOST/tests/color
  "mixer":
    docker:
      - image: circleci/node:7.10
    working_directory: ~/container-playground/containers/mixer/
    steps:
      - checkout:
          path: ~/container-playground

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      #linting
      - run:
          command: |
            mkdir -p ~/reports
            node_modules/.bin/eslint . --format junit --output-file ~/reports/eslint.xml
          when: always
      - store_test_results:
          path: ~/reports
      - store_artifacts:
          path: ~/reports

      # run tests!
      - run:
          name: Run tests with JUnit as reporter
          command: node_modules/.bin/jest --ci --runInBand --reporters=default --reporters=jest-junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"

      - setup_remote_docker
      - run:
          command: |
            docker build --rm=false -t $REGISTRY_HOST/tests/mixer .
      - run:
          command: |
            docker login --username $DOCKER_USER --password $DOCKER_PASS $REGISTRY_HOST
      - run:
          command: |
            docker push $REGISTRY_HOST/tests/mixer
  "webhook":
    docker:
      - image: byrnedo/alpine-curl
    steps:
      - run:
          name: Trigger docker remotely curl
          command: curl -d "" -X POST 'https://\$colorApp:QZw1cWJeTuHtJC7shbzqvtS2c9x3HJkqfTarMB8k7X2J4yxfx3jnbpqubTag@colorapp.scm.azurewebsites.net/docker/hook'

workflows:
  version: 2
  build:
    jobs:
      - "color":
          context: container-playground
      - "mixer":
          context: container-playground
      - "webhook":
          requires:
            - "color"
            - "mixer"
